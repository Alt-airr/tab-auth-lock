{"version":3,"sources":["components/weather_list/weather_cards/weather_card.module.css","components/weather_list/weather_list.module.css","components/header/header.module.css","components/weather_list/modal/modal.js","redux/citiesReducer.js","components/weather_list/weather_cards/weather_card.js","components/weather_list/weather_list.js","components/header/header.js","App.js","redux/store.js","index.js"],"names":["module","exports","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","SimpleModal","classes","React","useState","modalStyle","open","setOpen","handleClose","className","s","button15","type","onClick","Modal","aria-labelledby","aria-describedby","onClose","style","id","REDUCER_TYPE","citiesReducer","state","action","newCity","city","newCityName","weather","length","test","citiesData","push","alert","key","url","fetch","then","response","status","Promise","resolve","data","json","console","log","catch","error","serviceRequest","splice","index","Weather_Card","props","card","dispatch","Weather_list","cityElements","map","p","createRef","weatherList","addCity","addCityForm","placeholder","onChange","current","value","updateNewCityActionCreator","ref","cols","rows","btn","cardElements","Header","header","src","name","App","store","_state","this","_callSubscriber","getState","subscribe","observer","window","rerenderEntireTree","ReactDOM","render","bind","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,SAAW,iC,mBCA/DD,EAAOC,QAAU,CAAC,YAAc,kCAAkC,QAAU,8BAA8B,IAAM,0BAA0B,SAAW,+BAA+B,aAAe,qC,mBCAnMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,uB,gNCKzD,SAASC,IACP,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAiB,GAG1C,SAASC,IACP,IAAMC,EAAM,GAAKL,IACXM,EAAO,GAAKN,IAElB,MAAO,CACLK,IAAI,GAAD,OAAKA,EAAL,KACHC,KAAK,GAAD,OAAKA,EAAL,KACJC,UAAU,cAAD,OAAgBF,EAAhB,eAA0BC,EAA1B,OAIb,IAAME,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,OAAQ,iBACRC,UAAWR,EAAMS,QAAQ,GACzBC,QAASV,EAAMW,QAAQ,EAAG,EAAG,OAIlB,SAASC,IACtB,IAAMC,EAAUf,IADoB,EAGfgB,IAAMC,SAASrB,GAA7BsB,EAH6B,sBAIZF,IAAMC,UAAS,GAJH,mBAI7BE,EAJ6B,KAIvBC,EAJuB,KAU9BC,EAAc,WAClBD,GAAQ,IAGV,OACE,6BAEE,4BAAQE,UAAWC,IAAEC,SAAUC,KAAK,SAASC,QAX9B,WACjBN,GAAQ,KAUN,WAGA,kBAACO,EAAA,EAAD,CACEC,kBAAgB,qBAChBC,mBAAiB,2BACjBV,KAAMA,EACNW,QAAST,GAET,yBAAKU,MAAOb,EAAYI,UAAWP,EAAQZ,OACzC,wBAAI6B,GAAG,sBAAP,mBACA,uBAAGA,GAAG,4BAAN,2KAGA,4BAAQN,QAASL,GAAjB,YC/DH,IAAMY,EACD,WADCA,EAEM,kBAFNA,EAGG,eAHHA,EAIE,cA0EAC,EArEO,SAACC,EAAOC,GAE5B,OAAQA,EAAOX,MACb,KAAKQ,EACH,IAAII,EAAU,CACZC,KAAMH,EAAMI,YACZC,QAAS,WACX,GAAIL,EAAMI,YAAYE,OAAS,IAA+C,IAA1C,cAAcC,KAAKP,EAAMI,aAG7D,OAFAJ,EAAMQ,WAAWC,KAAKP,GACtBF,EAAMI,YAAc,GACbJ,EACF,KAAIA,EAAMI,YAAYE,OAAS,IAA+C,IAA1C,cAAcC,KAAKP,EAAMI,cAC5D,OAAOJ,EAD6EU,MAAM,qFAGlG,KAAKZ,EAEH,OADAE,EAAMI,YAAcH,EAAOC,QACpBF,EAET,KAAKF,EACH,IAAIK,EAAOH,EAAMQ,WAAWP,EAAOU,KAAKR,KAkBxC,OAfwB,SAACS,GASvBC,MAAMD,GAAKE,KARM,SAAUC,GAGrB,OAFwB,MAApBA,EAASC,QACVN,MAAM,kCACFO,QAAQC,QAAQH,KAMlBD,KAJI,SAAUK,GACnB,OAAOA,EAAKC,SAINN,KAAK,SAACK,GAAUE,QAAQC,IAAI,aAAcnB,EAAM,OAAQgB,KACvDI,MAAM,SAAAC,GAAK,OAAId,MAAMc,KAEpCC,CAfS,4DAAwDtB,EAAxD,kBAvBQ,qCAuCVH,EAET,KAAKF,EAEH,OADAE,EAAMQ,WAAWkB,OAAOzB,EAAO0B,MAAO,GAC/B3B,EAET,QAAS,OAAOA,ICbL4B,EAlCM,SAACC,GASpB,OACE,yBAAK1C,UAAWC,IAAE0C,MAChB,2CACcD,EAAM1B,MAGpB,yCACY0B,EAAMxB,SAGlB,4BAAQlB,UAAWC,IAAEC,SAAUE,QAjBd,WD0DiB,IAACoB,ECzDjCkB,EAAME,UDyD2BpB,ECzDOkB,EAAMF,MDyDJ,CAC9CrC,KAAMQ,EACNa,IAAKA,OC3CH,WAIA,kBAAChC,EAAD,MAEA,4BAAQQ,UAAWC,IAAEC,SAAUE,QApBhB,WD6DkB,IAACoC,EC5DpCE,EAAME,UD4D8BJ,EC5DGE,EAAMF,MD4DE,CAC/CrC,KAAMQ,EACN6B,MAAOA,OC3CL,iB,iBCoBSK,EA7CM,SAACH,GAIpB,IAAII,EAAeJ,EAAM7B,MAAMQ,WAAW0B,IAAI,SAACC,EAAGR,GAAJ,OACtC,kBAAC,EAAD,CAAcA,MAAOA,EAAOhB,IAAKgB,EAAOxB,KAAMgC,EAAEhC,KAClCE,QAAS8B,EAAE9B,QACX0B,SAAUF,EAAME,aAElC3B,EAAcvB,IAAMuD,YAWxB,OACE,yBAAKjD,UAAWC,IAAEiD,aAChB,yBAAKlD,UAAWC,IAAEkD,SAChB,yBAAKnD,UAAWC,IAAEmD,aAChB,2BAAOC,YAAa,gBACbC,SAVI,WACjB,IAAIvC,EAAUE,EAAYsC,QAAQC,MAClCd,EAAME,SFsCgC,SAAC7B,GAAD,MAAc,CAChDZ,KAAMQ,EACNI,QAASA,GExCE0C,CAA2B1C,KAS7ByC,MAAOd,EAAM7B,MAAMI,YACnByC,IAAKzC,EACH0C,KAAK,KAAKC,KAAK,OAI1B,4BAAQ5D,UAAWC,IAAE4D,IACbzD,QAtBA,WACZsC,EAAME,SFwCiC,CACnCzC,KAAMQ,MErBN,aAMF,yBAAKX,UAAWC,IAAE6D,cACfhB,K,iBC7BMiB,EAXA,SAACrB,GAEZ,OACI,yBAAK1C,UAAWC,IAAE+D,QAEZ,yBAAKC,IAAI,6FACT,uBAAGjE,UAAWC,IAAEiE,MAAhB,iB,QCaCC,EAjBH,SAACzB,GACX,OACE,yBAAK1C,UAAU,eAEb,kBAAC,EAAD,MAEA,yBAAKA,UAAU,qBAEb,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAca,MAAO6B,EAAM7B,MACb+B,SAAUF,EAAME,eCbpCwB,EAAQ,CACRC,OAAQ,CACAhD,WAAY,CACR,CAACL,KAAM,SAAUE,QAAS,WAC1B,CAACF,KAAM,SAAUE,QAAS,WAC1B,CAACF,KAAM,OAAQE,QAAS,YAE5BD,YAAa,IAGrB2B,SAVQ,SAUC9B,GACLwD,KAAKD,OAASzD,EAAc0D,KAAKD,OAAQvD,GACzCwD,KAAKC,gBAAgBD,KAAKD,SAK9BE,gBAjBQ,WAkBJrC,QAAQC,IAAI,kBAGhBqC,SArBQ,WAsBJ,OAAOF,KAAKD,QAGhBI,UAzBQ,SAyBEC,GACNJ,KAAKC,gBAAkBG,IAOhBN,IACfO,OAAOP,MAAQA,EC9Bf,IAAIQ,EAAqB,SAAC/D,GAEtBgE,IAASC,OAAO,kBAAC,EAAD,CACZjE,MAAOA,EAAO+B,SAAUwB,EAAMxB,SAASmC,KAAKX,GAAQA,MAAOA,IAC3DY,SAASC,eAAe,UAGhCL,EAAmBR,EAAMI,YAEzBJ,EAAMK,UAAU,WACZ,IAAI5D,EAAQuD,EAAMI,WAClBI,EAAmB/D,O","file":"static/js/main.eea51e07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"weather_card_card__3poAR\",\"button15\":\"weather_card_button15__3cveX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherList\":\"weather_list_weatherList__2nbBH\",\"addCity\":\"weather_list_addCity__3gaE7\",\"btn\":\"weather_list_btn__2DWKt\",\"button15\":\"weather_list_button15__2edGp\",\"cardElements\":\"weather_list_cardElements__3-sFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__TL5EF\",\"name\":\"header_name__meME1\"};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport s from './../weather_cards/weather_card.module.css'\r\n\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function SimpleModal() {\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <button className={s.button15} type=\"button\" onClick={handleOpen}>\r\n        Details\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <h2 id=\"simple-modal-title\">Text in a modal</h2>\r\n          <p id=\"simple-modal-description\">\r\n            Подробная погодная информация...\r\n          </p>\r\n          <button onClick={handleClose}>Close</button>\r\n\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","export const REDUCER_TYPE = {\r\n  ADD_CITY: 'ADD_CITY',\r\n  UPDATE_NEW_CITY: 'UPDATE_NEW_CITY',\r\n  REFRESH_DATA: 'REFRESH_DATA',\r\n  DELETE_CITY: 'DELETE_CITY'\r\n};\r\n\r\nexport const API_KEY = '75168a19f5ef56b8e04f22d88d46f08a';\r\n\r\nconst citiesReducer = (state, action) => {\r\n\r\n  switch (action.type) {\r\n    case REDUCER_TYPE.ADD_CITY:\r\n      let newCity = {\r\n        city: state.newCityName,\r\n        weather: 'weather'};\r\n      if (state.newCityName.length > 3 && /^[a-zA-Z]+$/.test(state.newCityName) === true){\r\n      state.citiesData.push(newCity);\r\n      state.newCityName = '';\r\n      return state;}\r\n      else if (state.newCityName.length < 3 || /^[a-zA-Z]+$/.test(state.newCityName) === false){alert('The name of the city should be 3 to 20 characters long and use only latin letters')}\r\n      else {return state}\r\n\r\n    case REDUCER_TYPE.UPDATE_NEW_CITY:\r\n      state.newCityName = action.newCity;\r\n      return state;\r\n\r\n    case REDUCER_TYPE.REFRESH_DATA:\r\n      let city = state.citiesData[action.key].city;\r\n      // let weather = state.citiesData[action.index].weather;\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`;\r\n      const serviceRequest =  (url) => {\r\n            let status = function (response) {\r\n              if (response.status !== 200) {\r\n                 alert('Looks like there was a problem')}\r\n              return Promise.resolve(response)}\r\n\r\n            let json = function (data) {\r\n              return data.json()}\r\n\r\n        fetch(url).then(status)\r\n                  .then(json)\r\n                   .then((data) => {console.log('Weather in', city, 'is :', data)})\r\n                    .catch(error => alert(error));\r\n           }\r\n      serviceRequest (url);\r\n      return state;\r\n\r\n    case REDUCER_TYPE.DELETE_CITY:\r\n      state.citiesData.splice(action.index, 1);\r\n      return state;\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addCityActionCreator = () => ({\r\n        type: REDUCER_TYPE.ADD_CITY\r\n      });\r\nexport const updateNewCityActionCreator = (newCity) => ({\r\n        type: REDUCER_TYPE.UPDATE_NEW_CITY,\r\n        newCity: newCity\r\n      });\r\n\r\nexport const refreshDataActionCreator = (key) => ({\r\n    type: REDUCER_TYPE.REFRESH_DATA,\r\n    key: key\r\n  }\r\n);\r\n\r\nexport const deleteCityActionCreator = (index) => ({\r\n    type: REDUCER_TYPE.DELETE_CITY,\r\n    index: index\r\n  }\r\n);\r\n\r\n\r\nexport default citiesReducer;","import React from 'react';\r\nimport s from './weather_card.module.css';\r\nimport SimpleModal from \"../modal/modal\";\r\nimport {refreshDataActionCreator, deleteCityActionCreator} from \"../../../redux/citiesReducer\";\r\n\r\nconst Weather_Card = (props) => {\r\n\r\n  let refreshWeather = () => {\r\n        props.dispatch(refreshDataActionCreator(props.index));\r\n    };\r\n  const deleteCity = () => {\r\n    props.dispatch(deleteCityActionCreator(props.index));\r\n\r\n  }\r\n  return (\r\n    <div className={s.card}>\r\n      <div>\r\n        City name: {props.city}\r\n      </div>\r\n\r\n      <div>\r\n        Weather: {props.weather}\r\n      </div>\r\n\r\n      <button className={s.button15} onClick={refreshWeather}>\r\n        Refresh\r\n      </button>\r\n\r\n      <SimpleModal />\r\n\r\n      <button className={s.button15} onClick={deleteCity}>\r\n        Delete City\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Weather_Card","import React from 'react';\r\nimport Weather_Card from \"./weather_cards/weather_card\";\r\nimport s from './weather_list.module.css'\r\nimport {addCityActionCreator, updateNewCityActionCreator} from \"../../redux/citiesReducer\";\r\n\r\nconst Weather_list = (props) => {\r\n\r\n  // let citiesLocalData = JSON.parse(localStorage.getItem('citiesData'))\r\n\r\n  let cityElements = props.state.citiesData.map((p, index) =>\r\n          <Weather_Card index={index} key={index} city={p.city}\r\n                        weather={p.weather}\r\n                        dispatch={props.dispatch}/>);\r\n\r\n  let newCityName = React.createRef();\r\n\r\n  let addCity = () => {\r\n    props.dispatch(addCityActionCreator());\r\n  };\r\n\r\n  let onCityChange = () => {\r\n    let newCity = newCityName.current.value;\r\n    props.dispatch(updateNewCityActionCreator(newCity));\r\n  };\r\n\r\n  return (\r\n    <div className={s.weatherList}>\r\n      <div className={s.addCity}>\r\n        <div className={s.addCityForm}>\r\n          <input placeholder={'Enter city...'}\r\n                 onChange={onCityChange}\r\n                 value={props.state.newCityName}\r\n                 ref={newCityName}\r\n                   cols=\"30\" rows=\"1\"\r\n          />\r\n        </div>\r\n\r\n        <button className={s.btn}\r\n                onClick={addCity}>\r\n          Add City\r\n        </button>\r\n\r\n      </div>\r\n      <div className={s.cardElements}>\r\n        {cityElements}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather_list;","import React from 'react';\r\nimport s from './header.module.css';\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        <div className={s.header}>\r\n\r\n              <img src='https://1.cms.s81c.com/sites/default/files/2019-06-07/cloud-homepage-leadspace-bg-01.jpg' />\r\n              <p className={s.name}>CityWeather</p>\r\n\r\n        </div>\r\n    );}\r\n\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Weather_list from \"./components/weather_list/weather_list\";\nimport Header from \"./components/header/header\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst App = (props) => {\n  return (\n    <div className=\"app-wrapper\">\n\n      <Header/>\n\n      <div className='app-wrapper__page'>\n\n        <BrowserRouter>\n          <Weather_list state={props.state}\n                        dispatch={props.dispatch}/>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import citiesReducer from \"./citiesReducer\";\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n            citiesData: [\r\n                {city: 'London', weather: 'weather'},\r\n                {city: 'Berlin', weather: 'weather'},\r\n                {city: 'Kiev', weather: 'weather'}\r\n            ],\r\n            newCityName: ''\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state = citiesReducer(this._state, action);\r\n        this._callSubscriber(this._state);\r\n        // let cities = JSON.stringify(this._state.citiesData);\r\n        // localStorage.setItem('citiesData', cities);\r\n    },\r\n\r\n    _callSubscriber() {\r\n        console.log('State changed');\r\n    },\r\n\r\n    getState() {\r\n        return this._state;\r\n    },\r\n\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n}\r\n\r\n\r\n\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/store\";\n\n\nlet rerenderEntireTree = (state) => {\n\n    ReactDOM.render(<App\n        state={state} dispatch={store.dispatch.bind(store)} store={store}\n    />, document.getElementById('root'));\n};\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState();\n    rerenderEntireTree(state);\n});\n\n"],"sourceRoot":""}